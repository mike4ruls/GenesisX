===Version 1.0===
-The start of an Open GL engine
-Created Window

===Version 1.1===
-Draws vertices to the screen

===Version 2.0===
-Added new clases:
 ~ Camera.h
 ~ Engine.h
 ~ Game.h
 ~ GameEntity.h
 ~ Mesh.h
 ~ Object.h
 ~ Renderer.h
 ~ Timer.h
 ~ Vertex.h
-Moved vertices to a Mesh class that is held by the Game Entity class
-Added a Vertex class that holds a struct of how the data of my vertices will be arranged
-Added in-game timer, delta time, and etc
-Added necessary methods for transformations, scale, and rotation inside Game Enity class
(NOTE: Can't implement them though because I don't know how to use openGL's math library ;-;
Also I need to get my vertex and pixel shader up and running before I can even use them anyways)

===Version 2.5===
-Added dynamic rendering for my game objects
(Basically they automatically add them selves to the render to be rendered on their own)

===Version 3.0===
-Moved Basic window creation and game loop to the engine class
-Added Shader Manager Class
-Finally got Verter Shader and Pixel Shader implemented and working

===Version 3.3===
-Modified the vertex shader to accept a struct of vertex information coming in
-Added more information to my vertex (uv's, normals, color)
-Added mouse and keyboard input

===Version 4.0===
-Added movable camera that moves and rotates
-Added input to move up, down, left, right, foward, backward
-Added sprinting with LEFT SHIFT
-Added 3-D cube mesh to view in the engine
-Added cycling colors that change over time